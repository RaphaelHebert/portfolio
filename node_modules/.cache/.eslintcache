[{"/Users/raphaelhebert/Desktop/portfolio/src/index.js":"1","/Users/raphaelhebert/Desktop/portfolio/src/reportWebVitals.js":"2","/Users/raphaelhebert/Desktop/portfolio/src/App.js":"3","/Users/raphaelhebert/Desktop/portfolio/src/components/landing/index.js":"4","/Users/raphaelhebert/Desktop/portfolio/src/components/social/index.js":"5","/Users/raphaelhebert/Desktop/portfolio/src/components/landing/Cover.js":"6","/Users/raphaelhebert/Desktop/portfolio/src/components/projects/NSDPY/index.js":"7","/Users/raphaelhebert/Desktop/portfolio/src/components/projectsList/index.js":"8","/Users/raphaelhebert/Desktop/portfolio/src/components/projectsList/projectsList.js":"9"},{"size":568,"mtime":1637590031394,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1637586079451,"results":"12","hashOfConfig":"11"},{"size":471,"mtime":1638177822671,"results":"13","hashOfConfig":"11"},{"size":217,"mtime":1638178362004,"results":"14","hashOfConfig":"11"},{"size":838,"mtime":1637692816113,"results":"15","hashOfConfig":"11"},{"size":445,"mtime":1637871108853,"results":"16","hashOfConfig":"11"},{"size":2995,"mtime":1638304141085,"results":"17","hashOfConfig":"11"},{"size":945,"mtime":1638178593762,"results":"18","hashOfConfig":"11"},{"size":724,"mtime":1638178127727,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"z1vdnq",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/raphaelhebert/Desktop/portfolio/src/index.js",[],["41","42"],"/Users/raphaelhebert/Desktop/portfolio/src/reportWebVitals.js",[],"/Users/raphaelhebert/Desktop/portfolio/src/App.js",["43"],"import {\n  Route,\n  Routes,\n  Link,\n} from 'react-router-dom';\n\nimport Social from \"./components/social\";\nimport Landing from \"./components/landing\";\nimport NSDPY from \"./components/projects/NSDPY\";\n\n\nfunction App() {\n  return (\n    <>\n      <Social />\n      <Routes>\n        <Route path=\"/\" element={<Landing/>} />\n        <Route path=\"projects\" >\n          <Route path=\"NSDPY\" element={<NSDPY />} />\n        </Route>\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","/Users/raphaelhebert/Desktop/portfolio/src/components/landing/index.js",[],"/Users/raphaelhebert/Desktop/portfolio/src/components/social/index.js",[],"/Users/raphaelhebert/Desktop/portfolio/src/components/landing/Cover.js",[],"/Users/raphaelhebert/Desktop/portfolio/src/components/projects/NSDPY/index.js",[],"/Users/raphaelhebert/Desktop/portfolio/src/components/projectsList/index.js",["44"],"import { Link } from \"react-router-dom\";\n//components\nimport projectsList from \"./projectsList.js\";\n//style\nimport './projects.css';\n//image\nimport testImg from './images/try.png'\n\n\nconst Projects = () => {\n    return (\n        <>\n        {\n            projectsList? projectsList.map(project => {\n                return(\n                    <Link to={`projects/${project.name}`}>\n                        <div className=\"project\" >\n                            <div>\n                                <h2>{project.name}</h2>\n                                <p>{project.description}</p>\n                            </div>\n                            {/* TODO: setup min width */}\n                            <img alt={`${ project.name} image`} src={testImg}/>\n                        </div>\n                    </Link>\n                )\n            }):\n            <p>No project to display</p>\n\n        }\n        </>\n    )\n}\n\nexport default Projects;","/Users/raphaelhebert/Desktop/portfolio/src/components/projectsList/projectsList.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":4,"column":3,"nodeType":"51","messageId":"52","endLine":4,"endColumn":7},{"ruleId":"53","severity":1,"message":"54","line":23,"column":29,"nodeType":"55","endLine":23,"endColumn":80},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]