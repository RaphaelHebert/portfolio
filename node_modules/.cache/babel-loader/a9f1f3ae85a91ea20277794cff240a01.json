{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelhebert/Desktop/portfolio/src/components/projects/NSDPY/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport projectsList from \"../../projectsList/projectsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NSDPY = () => {\n  _s();\n\n  // TODO: get the project name from url \n  useEffect(() => {\n    const project = projectsList.filter(project => project.name === \"NSDPY\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [project.name, \" ok\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" this is NSDPY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NSDPY, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = NSDPY;\nexport default NSDPY;\n\nvar _c;\n\n$RefreshReg$(_c, \"NSDPY\");","map":{"version":3,"sources":["/Users/raphaelhebert/Desktop/portfolio/src/components/projects/NSDPY/index.js"],"names":["useEffect","projectsList","NSDPY","project","filter","name"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;;;;AAIA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB;AACAF,EAAAA,SAAS,CAAE,MAAM;AACb,UAAMG,OAAO,GAAGF,YAAY,CAACG,MAAb,CAAoBD,OAAO,IAAIA,OAAO,CAACE,IAAR,KAAiB,OAAhD,CAAhB;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BACI;AAAA,iBAAKF,OAAO,CAACE,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CAZD;;GAAMH,K;;KAAAA,K;AAcN,eAAeA,KAAf","sourcesContent":["import { useEffect } from \"react\";\nimport projectsList from \"../../projectsList/projectsList\";\n\n\n\nconst NSDPY = () => {\n    // TODO: get the project name from url \n    useEffect( () => {\n        const project = projectsList.filter(project => project.name === \"NSDPY\");\n    }, [])\n\n    return(\n        <>\n            <h1>{project.name} ok</h1>\n            <p> this is NSDPY</p>\n        </>\n    )\n}\n\nexport default NSDPY;"]},"metadata":{},"sourceType":"module"}