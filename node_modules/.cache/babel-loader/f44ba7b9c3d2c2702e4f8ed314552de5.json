{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelhebert/Desktop/portfolio/src/components/projects/NSDPY/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport projectsList from \"../../projectsList/projectsList\";\nimport \"../projects.css\"; //images\n\nimport pipy from './img/pypi.png';\nimport python from './img/python.png';\nimport ncbi from './img/ncbi.png';\nimport readTheDocs from './img/readTheDoc.png';\nimport colab from './img/colabgoogle.png';\nimport github from './img/github.jpeg';\nimport nsdpy from './img/nsdpy.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst images = [pipy, python, ncbi, readTheDocs, colab, github];\n\nconst NSDPY = () => {\n  _s();\n\n  // TODO: get the project name from url \n  const [project, setProject] = useState([]);\n  useEffect(() => {\n    setProject(projectsList.filter(project => project.name === \"NSDPY\")[0]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: project ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logos\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nucleotides Sequences Downloader with Python\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logos\",\n        children: images.map(img => {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img,\n            alt: \"logo\",\n            width: \"100px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", project.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    // TODO: put a spinner\n    _jsxDEV(\"p\", {\n      children: \"Loading project...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NSDPY, \"0/XdUihKyW7xYXfoPs8i3rCVMLc=\");\n\n_c = NSDPY;\nexport default NSDPY;\n\nvar _c;\n\n$RefreshReg$(_c, \"NSDPY\");","map":{"version":3,"sources":["/Users/raphaelhebert/Desktop/portfolio/src/components/projects/NSDPY/index.js"],"names":["useState","useEffect","projectsList","pipy","python","ncbi","readTheDocs","colab","github","nsdpy","images","NSDPY","project","setProject","filter","name","map","img","description"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAO,iBAAP,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;;AAGA,MAAMC,MAAM,GAAG,CACXP,IADW,EAEXC,MAFW,EAGXC,IAHW,EAIXC,WAJW,EAKXC,KALW,EAMXC,MANW,CAAf;;AAWA,MAAMG,KAAK,GAAG,MAAM;AAAA;;AAEhB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACbY,IAAAA,UAAU,CAACX,YAAY,CAACY,MAAb,CAAoBF,OAAO,IAAIA,OAAO,CAACG,IAAR,KAAiB,OAAhD,EAAyD,CAAzD,CAAD,CAAV;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,cAEIH,OAAO,gBACP;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACI;AAAA,oBAAKA,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBACKL,MAAM,CAACM,GAAP,CAAYC,GAAG,IAAI;AAChB,8BACI;AAAK,YAAA,GAAG,EAAEA,GAAV;AAAe,YAAA,GAAG,EAAC,MAAnB;AAA0B,YAAA,KAAK,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJA;AADL;AAAA;AAAA;AAAA;AAAA,cALJ,eAYI;AAAA,kBAAKL,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI;AAAA,wBAAKH,OAAO,CAACM,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA,oBADO;AAAA;AAgBP;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBJ,mBADJ;AAyBH,CAlCD;;GAAMP,K;;KAAAA,K;AAoCN,eAAeA,KAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport projectsList from \"../../projectsList/projectsList\";\nimport \"../projects.css\";\n\n//images\nimport pipy from './img/pypi.png';\nimport python from './img/python.png';\nimport ncbi from './img/ncbi.png';\nimport readTheDocs from './img/readTheDoc.png';\nimport colab from './img/colabgoogle.png';\nimport github from './img/github.jpeg';\nimport nsdpy from './img/nsdpy.png';\n\n\nconst images = [\n    pipy,\n    python,\n    ncbi,\n    readTheDocs, \n    colab,\n    github\n]\n\n\n\nconst NSDPY = () => {\n\n    // TODO: get the project name from url \n    const [project, setProject] = useState([])\n\n    useEffect( () => {\n        setProject(projectsList.filter(project => project.name === \"NSDPY\")[0])\n    }, [])\n\n    return(\n        <>\n        {\n            project?\n            <>\n                <div className=\"logos\">\n                    <h1>{project.name}</h1>\n                    <p>Nucleotides Sequences Downloader with Python</p>\n                </div>\n                <div className=\"logos\">\n                    {images.map( img => {\n                        return(\n                            <img src={img} alt=\"logo\" width=\"100px\"/>\n                        )            \n                    })}\n                </div>\n                <h1>{project.name}</h1>\n                <p> {project.description}</p>\n            </>:\n            // TODO: put a spinner\n            <p>Loading project...</p>\n\n        }\n        </>\n    )\n}\n\nexport default NSDPY;"]},"metadata":{},"sourceType":"module"}